trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: BuildBackendDev
    displayName: 'Build and Deploy Backend Dev'
    variables:
      - group: ttnf-dev
    jobs:
      - job: BuildBackend
        displayName: 'Build Backend for Dev'
        steps:
          - checkout: self

          - task: Docker@2
            inputs:
              containerRegistry: 'ttnfdockerservice'
              repository: 'backend-dev'  
              command: 'buildAndPush'
              Dockerfile: 'backend/Dockerfile'
              tags: |
                $(Build.BuildId)-dev

          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'ttnfconnect' 
              appName: 'ttnf-api-dev'  
              containers: 'ttnfregistry.azurecr.io/backend-dev:$(Build.BuildId)-dev'

  - stage: BuildFrontendDev
    displayName: 'Build and Deploy Frontend Dev'
    variables:
      - group: ttnf-dev
    jobs:
      - job: BuildFrontend
        displayName: 'Build Frontend for Dev'
        steps:
          - checkout: self
          - script: echo $(REACT_APP_BACKEND_URL)
            displayName: 'Verify REACT_APP_BACKEND_URL is set'

          - task: Docker@2
            inputs:
              containerRegistry: 'ttnfdockerservice'
              repository: 'frontend-dev' 
              command: 'build'
              Dockerfile: 'frontend/Dockerfile'
              buildContext: './frontend'
              arguments: |
                --build-arg REACT_APP_BACKEND_URL=$(REACT_APP_BACKEND_URL)
                --build-arg REACT_APP_TINYMCE_API_KEY=$(REACT_APP_TINYMCE_API_KEY)
                --build-arg NODE_ENV=development
                --build-arg REACT_APP_ENV=development
              tags: |
                $(Build.BuildId)-dev
          - task: Docker@2
            inputs:
              containerRegistry: 'ttnfdockerservice'
              repository: 'frontend-dev'
              command: 'push'
              tags: |
                $(Build.BuildId)-dev

          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'ttnfconnect'  
              appName: 'ttnf-dev'  
              containers: 'ttnfregistry.azurecr.io/frontend-dev:$(Build.BuildId)-dev'

  - stage: ApprovalGate
    dependsOn:
      - BuildBackendDev
      - BuildFrontendDev
    jobs:
      - job: Approval
        pool: server
        steps:
          - task: ManualValidation@0
            inputs:
              instructions: 'Approve to promote to production'

  - stage: BuildBackendProd
    displayName: 'Build and Deploy Backend Prod'
    variables:
      - group: ttnf
    dependsOn: 
      - BuildFrontendDev
      - ApprovalGate
    jobs:
      - job: BuildBackendProd
        displayName: 'Build Backend for Prod'
        steps:
          - checkout: self

          - task: Docker@2
            inputs:
              containerRegistry: 'ttnfdockerservice'
              repository: 'backend'  
              command: 'buildAndPush'
              Dockerfile: 'backend/Dockerfile'
              tags: |
                $(Build.BuildId)-prod

          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'ttnfconnect'
              appName: 'ttnfapi'
              containers: 'ttnfregistry.azurecr.io/backend:$(Build.BuildId)-prod'

  - stage: BuildFrontendProd
    displayName: 'Build and Deploy Frontend Prod'
    variables:
      - group: ttnf
    dependsOn: 
      - BuildBackendProd
      - ApprovalGate
    jobs:
      - job: BuildFrontendProd
        displayName: 'Build Frontend for Prod'
        steps:
          - checkout: self
          - script: echo $(REACT_APP_BACKEND_URL)
            displayName: 'Verify REACT_APP_BACKEND_URL is set for Prod'

          - task: Docker@2
            inputs:
              containerRegistry: 'ttnfdockerservice'
              repository: 'frontend' 
              command: 'build'
              Dockerfile: 'frontend/Dockerfile'
              buildContext: './frontend'
              tags: |
                $(Build.BuildId)-prod
              arguments: |
                --build-arg REACT_APP_BACKEND_URL=$(REACT_APP_BACKEND_URL)
                --build-arg REACT_APP_TINYMCE_API_KEY=$(REACT_APP_TINYMCE_API_KEY)
                --build-arg REACT_APP_ENV=production
                --build-arg NODE_ENV=production

          - task: Docker@2
            inputs:
              containerRegistry: 'ttnfdockerservice'
              repository: 'frontend'
              command: 'push'
              tags: |
                $(Build.BuildId)-prod

          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'ttnfconnect'
              appName: 'ttnfpub'
              containers: 'ttnfregistry.azurecr.io/frontend:$(Build.BuildId)-prod'
