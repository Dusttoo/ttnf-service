"""updated page

Revision ID: 4785ec281474
Revises: 8a735a50436a
Create Date: 2024-08-22 12:32:11.960706

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4785ec281474'
down_revision: Union[str, None] = '8a735a50436a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pages', sa.Column('type', sa.String(), nullable=False))
    op.add_column('pages', sa.Column('name', sa.String(), nullable=False))
    op.add_column('pages', sa.Column('meta', sa.JSON(), nullable=True))
    op.add_column('pages', sa.Column('custom_values', sa.JSON(), nullable=True))
    op.add_column('pages', sa.Column('external_data', sa.JSON(), nullable=True))
    op.add_column('pages', sa.Column('author_id', sa.Integer(), nullable=True))
    op.add_column('pages', sa.Column('invalid_block_types', sa.JSON(), nullable=True))
    op.add_column('pages', sa.Column('status', sa.String(), nullable=False))
    op.add_column('pages', sa.Column('is_locked', sa.Boolean(), nullable=False))
    op.add_column('pages', sa.Column('tags', sa.JSON(), nullable=True))
    op.add_column('pages', sa.Column('published_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('pages', sa.Column('language', sa.String(), nullable=False))
    op.add_column('pages', sa.Column('translations', sa.JSON(), nullable=True))
    op.create_foreign_key(None, 'pages', 'users', ['author_id'], ['id'])
    op.drop_column('pages', 'editable')
    op.drop_column('pages', 'title')
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=False))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=False))
    op.add_column('users', sa.Column('avatar_url', sa.String(), nullable=True))
    op.add_column('users', sa.Column('company', sa.String(), nullable=True))
    op.add_column('users', sa.Column('role', sa.String(), nullable=False))
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'role')
    op.drop_column('users', 'company')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.add_column('pages', sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('pages', sa.Column('editable', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'pages', type_='foreignkey')
    op.drop_column('pages', 'translations')
    op.drop_column('pages', 'language')
    op.drop_column('pages', 'published_at')
    op.drop_column('pages', 'tags')
    op.drop_column('pages', 'is_locked')
    op.drop_column('pages', 'status')
    op.drop_column('pages', 'invalid_block_types')
    op.drop_column('pages', 'author_id')
    op.drop_column('pages', 'external_data')
    op.drop_column('pages', 'custom_values')
    op.drop_column('pages', 'meta')
    op.drop_column('pages', 'name')
    op.drop_column('pages', 'type')
    # ### end Alembic commands ###
